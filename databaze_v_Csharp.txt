1. Které tvrzení je **chybné**:
--
MS SQL Server Management Studio je lokální, portable databáze.
--
`RDBMS` je označení pro databázový stroj. 
--
Vlastnost `Atomicity` znamená, že se série SQL dotazů vykoná buď celá nebo vůbec.
--
`ACID` je zkratka žádoucích vlastností databázových transakcí. 
{ARTICLE URL:https://www.itnetwork.cz/csharp/databaze/c-sharp-tutorial-uvod-do-databazi}

2. Která z databází je **nejvhodnější** pro C# a .NET:  
--
MS-SQL
--
SQLite
--
MySQL
--
Excel 365
{ARTICLE URL:https://www.itnetwork.cz/csharp/databaze/c-sharp-tutorial-uvod-do-databazi}

3. Nejpoužívanější datový typ pro **krátký text** je:
--
nvarchar
--
nchar
--
char
--
varchar
{ARTICLE https://www.itnetwork.cz/csharp/databaze/vytvoreni-lokalni-databaze-ve-visual-studio/}

4. Které tvrzení je **chybné**:
--
Název tabulky musí být velkými písmeny.  
--
Definice tabulky se podobá definici třídy.
--
Řádky v tabulce odpovídají instancím třídy. 
--
Položky ve sloupci odpovídají vlastnostem třídy.
{ARTICLE https://www.itnetwork.cz/csharp/databaze/vytvoreni-lokalni-databaze-ve-visual-studio/}

5. Které tvrzení je **chybné**:
--
Vymažeme-li řádek tabulky, primární klíč se automaticky přečísluje. 
--
Primární klíč slouží jako unikátní identifikátor (např. Id).
--
Aby byl sloupec unikátní, musí být možnost `Is Identity` nastavena na `True`.
--
Slovy: cizí klíč, relace, Foreign Key, označujeme vazbu na primární klíč jiné tabulky. 
{ARTICLE https://www.itnetwork.cz/csharp/databaze/vytvoreni-lokalni-databaze-ve-visual-studio/}

6. Které tvrzení je **chybné**:
--
Objektově relační mapování vyžaduje znalost SQL.
--
Entity Framework je technologie pro práci s databází, využívá ORM.
--
Objektový přístup vychází z filosofie OOP, databáze fungují objektově.
--
Relační přístup je založený na tabulkách a propojení mezi nimi.   
{ARTICLE https://www.itnetwork.cz/csharp/databaze/c-sharp-tutorial-pristupy-pro-praci-s-relacni-databazi}

7. Které tvrzení je **chybné**:
--
Jmenný prostor pro práci se SQL databázemi je: `System.Sql.Data `
--
Pro připojení k databázi je nezbytný řetězec `ConnectionString`.
--
Vlastnost `AttachDbFilename` předává cestu k souboru lokální databáze. 
--
Vlastnost `InitialCatalog` předává název databáze. 
{ARTICLE https://www.itnetwork.cz/csharp/databaze/c-sharp-tutorial-pripojena-databazova-aplikace}

8. Mezi vlastnosti `SqlConnectionStringBuilderu` **nepatří**: 
--
RowState
--
DataSource
--
InitialCatalog  
--
IntegratedSecurity
{ARTICLE https://www.itnetwork.cz/csharp/databaze/c-sharp-tutorial-pripojena-databazova-aplikace} 

9. Které tvrzení je **chybné**:
--
Metodu `ExecuteScalar()` použijeme k uzavření nepotřebných spojení.
--
Metodu `ExecuteReader()` použijeme když SQL dotaz vrací množinu dat.
--
Metodu `ExecuteNonQuery()` použijeme když dotazy nevrací žádnou hodnotu.  
--
Databázové objekty tvoříme zpravidla v bloku `using`, který uzavře nepotřebné spojení. 
{ARTICLE https://www.itnetwork.cz/csharp/databaze/c-sharp-tutorial-pripojena-databazova-aplikace}

10. Který příkaz třídy SqlDataReader je **chybný**: 
--
dataReader.Execute["all"]
--
dataReader["studentId"]
--
dataReader[2]     
--
dataReader.GetString(1)
{ARTICLE https://www.itnetwork.cz/csharp/databaze/c-sharp-tutorial-pripojena-databazova-aplikace-zpracovani}

11. Které tvrzení je **chybné**?
--
Rizika SQL injection řeší ošetření uživatelského vstupu pomocí bloku `try-catch`.
--
SQL injection je nebezpečná technika, která může poškodit databázi. 
--
SQL injection je vložení cizího SQL kódu do textu SQL dotazu.
--
SQL injection souvisí s možností uživatelského vstupu. 
{ARTICLE https://www.itnetwork.cz/csharp/databaze/c-sharp-tutorial-pripojena-databazova-aplikace-zpracovani}

12. Které tvrzení je **chybné**?
--
Ošetření databáze před škodlivým kódem z užvatelských vstupů řeší MS-SQL Server od verze 12.0. 
--
Prepared Statement odděluje SQL dotaz od uživatelského vstupu.
--
Parametrizovaný dotaz je šablona pro SQL příkaz - parametry se připojí až poté, co je dotaz připraven k provedení.
--
Tento příkaz obsahuje „zástupnou značku“:
/--code csharp
prikaz.Parameters.AddWithValue("@slovo", slovo); 
\--
{ARTICLE https://www.itnetwork.cz/csharp/databaze/c-sharp-tutorial-pripojena-databazova-aplikace-zpracovani}

13. Které tvrzení je **chybné**?
--
Metoda `ExecuteNonQuery();` vrací True pokud byl příkaz proveden.
--
Tento příkaz smaže veškeré záznamy v tabulce: 
/--code csharp
string dotaz = "DELETE FROM Ukoly";
\--
--
`CRUD` je zkratka pro základní databázové operace.
--
Z databáze čteme pomocí SqlDataReaderu a příkazu `SELECT`. 
{ARTICLE https://www.itnetwork.cz/csharp/databaze/c-sharp-tutorial-databaze-ado-net-insert-update-delete-count}

14. Které tvrzení je **chybné**?
--
Pokud u příkazu `DELETE` nepoužijeme klauzuli `WHERE`, bude smazán poslední přidaný záznam.  
--
Klauzuli `SET` využijeme u příkazu `UPDATE`. 
--
Hranaté závorky jsou v dotazu povinné, pokud je v názvu sloupce použito klíčové slovo.  
--
Výhodou připojeného přístupu k databázi je aktuálnost zpracovávaných dat.
{ARTICLE https://www.itnetwork.cz/csharp/databaze/c-sharp-tutorial-databaze-ado-net-insert-update-delete-count}

15. Které tvrzení je **chybné**?
--
`SqlDataAdapter` má obvykle prázdný konstruktor. 
--
Instanci třídy `SqlConnection` předáváme `ConnectionString` v konstruktoru.
--
Data z databáze přichází jako objekt `DataSet`.
--
K naplnění DataSetu daty, používáme `SqlDataAdapter`. 
{ARTICLE https://www.itnetwork.cz/csharp/databaze/c-sharp-net-tutorial-databaze-ado-net-dataset-sqldataadapter}

16. Které tvrzení je **chybné**?
--
Pro více tabulek je nutné vytvořit více instancí třídy `DataSet`.
--
`SqlDataAdapter` pomocí metody `Fill()` předá data DataSetu.
--
`SqlDataAdapter` přidá řádky do cílových `DataTable` objektů v objektu DataSet.
--
`SqlDataAdapter` načítá řádky ze zdroje dat pomocí příkazu `SELECT`.
{ARTICLE https://www.itnetwork.cz/csharp/databaze/c-sharp-net-tutorial-databaze-ado-net-dataset-sqldataadapter}

17. Které tvrzení je **chybné**?
--
`DataTable` může obsahovat více kolekcí `DataSet`, ale ne naopak.
--
Pomocí třídy `DataRow` pracujeme s řádky. 
--
Pomocí smyčky foreach můžeme projít jednotlivé řádky/DataRow. 
--
Z `DataRow` můžeme číst hodnoty dvěma způsoby: pomocí indexu sloupce, nebo pomocí názvu sloupce v hranatých závorkách.
{ARTICLE https://www.itnetwork.cz/csharp/databaze/c-sharp-net-tutorial-databaze-ado-net-dataset-sqldataadapter}

18. Které tvrzení je **chybné**?
--
Aby mohl `DataSet` uchovávat a upravovat data, potřebuje stálé připojení ke zdroji dat. 
--
Data načtená v DataSetu můžeme filtrovat buď pomocí třídy `DataTable`, nebo pomocí třídy `DataView`.
--
Relaci přidáváme do DataSetu jen pokud ji chceme využít. 
--
Kód pro nalezení záznamu: 
/--code csharp
DataRow[] nalezeneRadky = datovaSada.Tables["Kategorie"].Select("Title='Rodina'");
\--
{ARTICLE https://www.itnetwork.cz/csharp/databaze/c-sharp-net-tutorial-odpojena-databazova-aplikace-dataset-podruhe}

19. Které tvrzení je **chybné**?
--
Třída `DataRow` má metodu `ChildRowsView()`.
--
Relace je vztah mezi dvěma databázovými tabulkami.
--
V DataSetu jsou všechny relace uloženy v kolekci `Relations`. 
--
Relaci mezi tabulkami „Typ“ a „Auta“ můžeme vytvořit takto: 
/--code csharp
...
DataRelation relace = new DataRelation("relTypAuta",
    datovaSada.Tables["Typ"].Columns["Id"],
    datovaSada.Tables["Auta"].Columns["TypId"]);
datovaSada.Relations.Add(relace);
...
\--
{ARTICLE https://www.itnetwork.cz/csharp/databaze/c-sharp-net-tutorial-odpojena-databazova-aplikace-dataset-podruhe}

20. Které tvrzení je **chybné**?
--
Novou instanci třídy `DataRow` vytvoříme takto: 
/--code csharp
DataRow novaKategorie = new DataRow("Kategorie").NewRow();
\--
--
U „odpojeného přístupu práce s daty“ se po skončení programu žádné změny v databázi neprojeví. 
--
Aby se u „odpojené databáze“ změny trvale uložily, musíme použít `SqlCommandBuilder`, třídu `DataAdapter` a metodu `Update()`.
--
Novou instanci třídy `DataRow` vytvoříme takto: 
/--code csharp
DataRow novaKategorie = datovaSada.Tables["Kategorie"].NewRow();
\--
{ARTICLE https://www.itnetwork.cz/csharp/databaze/c-sharp-net-tutorial-odpojena-databazova-aplikace-dataset-podruhe}

21. Které tvrzení je **chybné**?
--
Máme-li sloupec nastavený: `Is Identity` - YES, nemusíme už nastavovat primární klíč. 
--
MS SQL Server Management Studio je nástroj pro práci s databázemi.
--
Zapnutí SQL Serveru (State – Running) provádíme přes SQL Server Configuration Manager.
--
Funkce Identity (seed, increment) obvykle poskytuje hodnoty pro primární klíč. 
{ARTICLE https://www.itnetwork.cz/csharp/databaze/c-sharp-tutorial-sql-vytvoreni-databaze-v-ms-sql-management-studio}