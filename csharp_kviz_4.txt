1. Jaká hláška se zobrazí na konzoli?
/--code csharp
int rybari = 4;
int zizaly = 23;
int zbytek = zizaly % rybari;
string zprava = (zbytek >= 3) ? "Dostanou i slepice." : (zbytek == 1 || zbytek == 2) ? "Vytrolíme holky..." : "Vyšlo to přesně.";
Console.WriteLine(zprava);
\--
--
Dostanou i slepice.
--
Vytrolíme holky...
--
Vyšlo to přesně.
--
program způsobí chybu
{ARTICLE URL: csharp/zaklady/podminky-v-csharp-podruhe-ternarni-vyraz-a-propadavaci-switch}

2. Které tvrzení o cyklu `switch` je **chybné**?
--
`default` se spustí jako první
--
`switch` použijeme pro porovnání jedné hodnoty s mnoha možnými (pro hledání shody)
--
pokud `case` najde shodu, cyklus se ukončí  
--
„propadávání“ je technika, kdy jsou `case` ve skupinách (skupina má jeden společný kód a `break;`) 
{ARTICLE URL: csharp/zaklady/podminky-v-csharp-podruhe-ternarni-vyraz-a-propadavaci-switch}

3. Co je výsledkem tohoto kódu?
/--code csharp
string[] parametry = { "majetek", "vzhled", "vek", "IQ", "kondice", "status" };
string vyjadreni = (parametry.Contains("vzhled") && !parametry.Contains("nedostatky")) ? "To by šlo. " : "To by nešlo. ";
vyjadreni += (parametry.Count() > 3) ? "Mohu pozvat na kávu? " : "Zavolám ti... ";
Console.WriteLine(vyjadreni);
\--
--
To by šlo. Mohu pozvat na kávu?
--
To by šlo.
--
Mohu pozvat na kávu?
--
Zavolám ti...
{ARTICLE URL: csharp/zaklady/podminky-v-csharp-podruhe-ternarni-vyraz-a-propadavaci-switch}

4. Kolik banánů hodíš opicím, aby se nepopraly?
/--code csharp
int banan = int.Parse(Console.ReadLine());
if (banan > 1)
    Console.WriteLine("Opice mají hody a neperou se!");
else if (banan == 1)
    Console.WriteLine("Už se perou!");
if (banan < 1)
    Console.WriteLine("Nehodils žádný banán?! Lakomče! No, alespoň se neperou...");
\--
--
0 nebo 2 a více
--
0
--
2 a více
--
1
{ARTICLE URL: csharp/zaklady/cykly-v-csharp-net-podruhe-do-while-break-a-continue}

5. Které tvrzení je **chybné**?
--
`do-while` je starší verze cyklu `while-do` a už se nepoužívá  
--
`break` ukončuje aktuální cyklus 
--
`continue` můžeme použít při validování položek z nějaké kolekce 
--
cyklus `for` **ne**musí mít vyplněnou hlavičku: `for(;;)`
{ARTICLE URL: csharp/zaklady/cykly-v-csharp-net-podruhe-do-while-break-a-continue}

6. Co je výstupem tohoto kódu?
/--code csharp
while (true)
{
int index = 0;
Console.Write(index++); 
if (index == 3)
    break;
}
\--
--
nekonečné množství nul
--
123
--
nekonečné množství jedniček
--
0123
{ARTICLE URL: csharp/zaklady/cykly-v-csharp-net-podruhe-do-while-break-a-continue}

7. Pro tento kus kódu **neplatí**:
/--code csharp
do
{
    Console.Write("Zadejte heslo: ");
    heslo = Console.ReadLine(); //správné heslo je: Ch@rlie123
    if (heslo != "Ch@rlie123")
        pokus++;
    else
        pokus = 1;
}
while ((heslo != "Ch@rlie123") && (pokus != 3));
\--
--
kód způsobí vyvolání výjimky
--
po zadání správného hesla smyčka `do-while` skončí
--
smyčka `do-while` proběhne maximálně 3x
--
když nebude zadáno správné heslo, bude se kód opakovat, ale pokusy jsou limitované
{ARTICLE URL: csharp/zaklady/cykly-v-csharp-net-podruhe-do-while-break-a-continue}

8. Které trpaslíky tento kód vypíše?
/--code csharp
string[] trpaslici = { "Rejpal", "Stydlín", "Šmudla", "Prófa", "Kejchal", "Štístko", "Dřímal" };
for (int i = 0; i < trpaslici.Length; i++) 
{                
    if (i == 2) continue; 
    if (i == 5) break;			
    Console.Write(trpaslici[i] + ", ");
}
\--
--
Rejpal, Stydlín, Prófa, Kejchal,
--
Rejpal, Stydlín, 
--
Rejpal, Stydlín, Prófa, Kejchal, Dřímal,
--
Šmudla, Štístko;
{ARTICLE URL: csharp/zaklady/cykly-v-csharp-net-podruhe-do-while-break-a-continue}
